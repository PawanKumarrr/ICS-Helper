/**
 * generated by Xtext 2.34.0
 */
package ics.helper.helperDSL.impl;

import ics.helper.helperDSL.DaysOfWeek;
import ics.helper.helperDSL.Event;
import ics.helper.helperDSL.HelperDSLPackage;
import ics.helper.helperDSL.Person;
import ics.helper.helperDSL.RecurRule;
import ics.helper.helperDSL.Reminder;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getName <em>Name</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getStartTime <em>Start Time</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getEndTime <em>End Time</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getRecur <em>Recur</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getDaysOfWeek <em>Days Of Week</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getLink <em>Link</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getOrganizer <em>Organizer</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getInvitees <em>Invitees</em>}</li>
 *   <li>{@link ics.helper.helperDSL.impl.EventImpl#getReminder <em>Reminder</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EventImpl extends MinimalEObjectImpl.Container implements Event
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getStartTime() <em>Start Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartTime()
   * @generated
   * @ordered
   */
  protected static final String START_TIME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStartTime() <em>Start Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartTime()
   * @generated
   * @ordered
   */
  protected String startTime = START_TIME_EDEFAULT;

  /**
   * The default value of the '{@link #getEndTime() <em>End Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndTime()
   * @generated
   * @ordered
   */
  protected static final String END_TIME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEndTime() <em>End Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndTime()
   * @generated
   * @ordered
   */
  protected String endTime = END_TIME_EDEFAULT;

  /**
   * The default value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected static final String LOCATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected String location = LOCATION_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getRecur() <em>Recur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecur()
   * @generated
   * @ordered
   */
  protected static final RecurRule RECUR_EDEFAULT = RecurRule.DAILY;

  /**
   * The cached value of the '{@link #getRecur() <em>Recur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecur()
   * @generated
   * @ordered
   */
  protected RecurRule recur = RECUR_EDEFAULT;

  /**
   * The cached value of the '{@link #getDaysOfWeek() <em>Days Of Week</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDaysOfWeek()
   * @generated
   * @ordered
   */
  protected DaysOfWeek daysOfWeek;

  /**
   * The default value of the '{@link #getLink() <em>Link</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLink()
   * @generated
   * @ordered
   */
  protected static final String LINK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLink() <em>Link</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLink()
   * @generated
   * @ordered
   */
  protected String link = LINK_EDEFAULT;

  /**
   * The cached value of the '{@link #getOrganizer() <em>Organizer</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrganizer()
   * @generated
   * @ordered
   */
  protected Person organizer;

  /**
   * The cached value of the '{@link #getInvitees() <em>Invitees</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInvitees()
   * @generated
   * @ordered
   */
  protected EList<Person> invitees;

  /**
   * The cached value of the '{@link #getReminder() <em>Reminder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReminder()
   * @generated
   * @ordered
   */
  protected Reminder reminder;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EventImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HelperDSLPackage.Literals.EVENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStartTime()
  {
    return startTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStartTime(String newStartTime)
  {
    String oldStartTime = startTime;
    startTime = newStartTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__START_TIME, oldStartTime, startTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEndTime()
  {
    return endTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndTime(String newEndTime)
  {
    String oldEndTime = endTime;
    endTime = newEndTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__END_TIME, oldEndTime, endTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(String newLocation)
  {
    String oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__LOCATION, oldLocation, location));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RecurRule getRecur()
  {
    return recur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRecur(RecurRule newRecur)
  {
    RecurRule oldRecur = recur;
    recur = newRecur == null ? RECUR_EDEFAULT : newRecur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__RECUR, oldRecur, recur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DaysOfWeek getDaysOfWeek()
  {
    return daysOfWeek;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDaysOfWeek(DaysOfWeek newDaysOfWeek, NotificationChain msgs)
  {
    DaysOfWeek oldDaysOfWeek = daysOfWeek;
    daysOfWeek = newDaysOfWeek;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__DAYS_OF_WEEK, oldDaysOfWeek, newDaysOfWeek);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDaysOfWeek(DaysOfWeek newDaysOfWeek)
  {
    if (newDaysOfWeek != daysOfWeek)
    {
      NotificationChain msgs = null;
      if (daysOfWeek != null)
        msgs = ((InternalEObject)daysOfWeek).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__DAYS_OF_WEEK, null, msgs);
      if (newDaysOfWeek != null)
        msgs = ((InternalEObject)newDaysOfWeek).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__DAYS_OF_WEEK, null, msgs);
      msgs = basicSetDaysOfWeek(newDaysOfWeek, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__DAYS_OF_WEEK, newDaysOfWeek, newDaysOfWeek));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLink()
  {
    return link;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLink(String newLink)
  {
    String oldLink = link;
    link = newLink;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__LINK, oldLink, link));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person getOrganizer()
  {
    return organizer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOrganizer(Person newOrganizer, NotificationChain msgs)
  {
    Person oldOrganizer = organizer;
    organizer = newOrganizer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__ORGANIZER, oldOrganizer, newOrganizer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrganizer(Person newOrganizer)
  {
    if (newOrganizer != organizer)
    {
      NotificationChain msgs = null;
      if (organizer != null)
        msgs = ((InternalEObject)organizer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__ORGANIZER, null, msgs);
      if (newOrganizer != null)
        msgs = ((InternalEObject)newOrganizer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__ORGANIZER, null, msgs);
      msgs = basicSetOrganizer(newOrganizer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__ORGANIZER, newOrganizer, newOrganizer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Person> getInvitees()
  {
    if (invitees == null)
    {
      invitees = new EObjectContainmentEList<Person>(Person.class, this, HelperDSLPackage.EVENT__INVITEES);
    }
    return invitees;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reminder getReminder()
  {
    return reminder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReminder(Reminder newReminder, NotificationChain msgs)
  {
    Reminder oldReminder = reminder;
    reminder = newReminder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__REMINDER, oldReminder, newReminder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReminder(Reminder newReminder)
  {
    if (newReminder != reminder)
    {
      NotificationChain msgs = null;
      if (reminder != null)
        msgs = ((InternalEObject)reminder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__REMINDER, null, msgs);
      if (newReminder != null)
        msgs = ((InternalEObject)newReminder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HelperDSLPackage.EVENT__REMINDER, null, msgs);
      msgs = basicSetReminder(newReminder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HelperDSLPackage.EVENT__REMINDER, newReminder, newReminder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HelperDSLPackage.EVENT__DAYS_OF_WEEK:
        return basicSetDaysOfWeek(null, msgs);
      case HelperDSLPackage.EVENT__ORGANIZER:
        return basicSetOrganizer(null, msgs);
      case HelperDSLPackage.EVENT__INVITEES:
        return ((InternalEList<?>)getInvitees()).basicRemove(otherEnd, msgs);
      case HelperDSLPackage.EVENT__REMINDER:
        return basicSetReminder(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HelperDSLPackage.EVENT__NAME:
        return getName();
      case HelperDSLPackage.EVENT__START_TIME:
        return getStartTime();
      case HelperDSLPackage.EVENT__END_TIME:
        return getEndTime();
      case HelperDSLPackage.EVENT__LOCATION:
        return getLocation();
      case HelperDSLPackage.EVENT__DESCRIPTION:
        return getDescription();
      case HelperDSLPackage.EVENT__RECUR:
        return getRecur();
      case HelperDSLPackage.EVENT__DAYS_OF_WEEK:
        return getDaysOfWeek();
      case HelperDSLPackage.EVENT__LINK:
        return getLink();
      case HelperDSLPackage.EVENT__ORGANIZER:
        return getOrganizer();
      case HelperDSLPackage.EVENT__INVITEES:
        return getInvitees();
      case HelperDSLPackage.EVENT__REMINDER:
        return getReminder();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HelperDSLPackage.EVENT__NAME:
        setName((String)newValue);
        return;
      case HelperDSLPackage.EVENT__START_TIME:
        setStartTime((String)newValue);
        return;
      case HelperDSLPackage.EVENT__END_TIME:
        setEndTime((String)newValue);
        return;
      case HelperDSLPackage.EVENT__LOCATION:
        setLocation((String)newValue);
        return;
      case HelperDSLPackage.EVENT__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case HelperDSLPackage.EVENT__RECUR:
        setRecur((RecurRule)newValue);
        return;
      case HelperDSLPackage.EVENT__DAYS_OF_WEEK:
        setDaysOfWeek((DaysOfWeek)newValue);
        return;
      case HelperDSLPackage.EVENT__LINK:
        setLink((String)newValue);
        return;
      case HelperDSLPackage.EVENT__ORGANIZER:
        setOrganizer((Person)newValue);
        return;
      case HelperDSLPackage.EVENT__INVITEES:
        getInvitees().clear();
        getInvitees().addAll((Collection<? extends Person>)newValue);
        return;
      case HelperDSLPackage.EVENT__REMINDER:
        setReminder((Reminder)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HelperDSLPackage.EVENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__START_TIME:
        setStartTime(START_TIME_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__END_TIME:
        setEndTime(END_TIME_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__LOCATION:
        setLocation(LOCATION_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__RECUR:
        setRecur(RECUR_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__DAYS_OF_WEEK:
        setDaysOfWeek((DaysOfWeek)null);
        return;
      case HelperDSLPackage.EVENT__LINK:
        setLink(LINK_EDEFAULT);
        return;
      case HelperDSLPackage.EVENT__ORGANIZER:
        setOrganizer((Person)null);
        return;
      case HelperDSLPackage.EVENT__INVITEES:
        getInvitees().clear();
        return;
      case HelperDSLPackage.EVENT__REMINDER:
        setReminder((Reminder)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HelperDSLPackage.EVENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case HelperDSLPackage.EVENT__START_TIME:
        return START_TIME_EDEFAULT == null ? startTime != null : !START_TIME_EDEFAULT.equals(startTime);
      case HelperDSLPackage.EVENT__END_TIME:
        return END_TIME_EDEFAULT == null ? endTime != null : !END_TIME_EDEFAULT.equals(endTime);
      case HelperDSLPackage.EVENT__LOCATION:
        return LOCATION_EDEFAULT == null ? location != null : !LOCATION_EDEFAULT.equals(location);
      case HelperDSLPackage.EVENT__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case HelperDSLPackage.EVENT__RECUR:
        return recur != RECUR_EDEFAULT;
      case HelperDSLPackage.EVENT__DAYS_OF_WEEK:
        return daysOfWeek != null;
      case HelperDSLPackage.EVENT__LINK:
        return LINK_EDEFAULT == null ? link != null : !LINK_EDEFAULT.equals(link);
      case HelperDSLPackage.EVENT__ORGANIZER:
        return organizer != null;
      case HelperDSLPackage.EVENT__INVITEES:
        return invitees != null && !invitees.isEmpty();
      case HelperDSLPackage.EVENT__REMINDER:
        return reminder != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", startTime: ");
    result.append(startTime);
    result.append(", endTime: ");
    result.append(endTime);
    result.append(", location: ");
    result.append(location);
    result.append(", description: ");
    result.append(description);
    result.append(", recur: ");
    result.append(recur);
    result.append(", link: ");
    result.append(link);
    result.append(')');
    return result.toString();
  }

} //EventImpl
