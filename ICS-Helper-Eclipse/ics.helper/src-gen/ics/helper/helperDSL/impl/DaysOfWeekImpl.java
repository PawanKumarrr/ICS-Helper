/**
 * generated by Xtext 2.34.0
 */
package ics.helper.helperDSL.impl;

import ics.helper.helperDSL.DaysOfWeek;
import ics.helper.helperDSL.HelperDSLPackage;
import ics.helper.helperDSL.WEEKDAY;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Days Of Week</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ics.helper.helperDSL.impl.DaysOfWeekImpl#getDays <em>Days</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DaysOfWeekImpl extends MinimalEObjectImpl.Container implements DaysOfWeek
{
  /**
   * The cached value of the '{@link #getDays() <em>Days</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDays()
   * @generated
   * @ordered
   */
  protected EList<WEEKDAY> days;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DaysOfWeekImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HelperDSLPackage.Literals.DAYS_OF_WEEK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<WEEKDAY> getDays()
  {
    if (days == null)
    {
      days = new EDataTypeEList<WEEKDAY>(WEEKDAY.class, this, HelperDSLPackage.DAYS_OF_WEEK__DAYS);
    }
    return days;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HelperDSLPackage.DAYS_OF_WEEK__DAYS:
        return getDays();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HelperDSLPackage.DAYS_OF_WEEK__DAYS:
        getDays().clear();
        getDays().addAll((Collection<? extends WEEKDAY>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HelperDSLPackage.DAYS_OF_WEEK__DAYS:
        getDays().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HelperDSLPackage.DAYS_OF_WEEK__DAYS:
        return days != null && !days.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (days: ");
    result.append(days);
    result.append(')');
    return result.toString();
  }

} //DaysOfWeekImpl
