/*
 * generated by Xtext 2.34.0
 */
package ics.helper.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class HelperDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Model");
		private final Assignment cCommandsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_0 = (RuleCall)cCommandsAssignment.eContents().get(0);
		
		//Model:
		//    commands+=Command*;
		@Override public ParserRule getRule() { return rule; }
		
		//commands+=Command*
		public Assignment getCommandsAssignment() { return cCommandsAssignment; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_0() { return cCommandsCommandParserRuleCall_0; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Command");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateCommandParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSplitCommandParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMergeCommandParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cModifyCommandParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Command:
		//    CreateCommand | SplitCommand | MergeCommand | ModifyCommand;
		@Override public ParserRule getRule() { return rule; }
		
		//CreateCommand | SplitCommand | MergeCommand | ModifyCommand
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CreateCommand
		public RuleCall getCreateCommandParserRuleCall_0() { return cCreateCommandParserRuleCall_0; }
		
		//SplitCommand
		public RuleCall getSplitCommandParserRuleCall_1() { return cSplitCommandParserRuleCall_1; }
		
		//MergeCommand
		public RuleCall getMergeCommandParserRuleCall_2() { return cMergeCommandParserRuleCall_2; }
		
		//ModifyCommand
		public RuleCall getModifyCommandParserRuleCall_3() { return cModifyCommandParserRuleCall_3; }
	}
	public class CreateCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.CreateCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cScheduleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEventsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEventsEventParserRuleCall_4_0 = (RuleCall)cEventsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CreateCommand:
		//    'create' 'schedule' name=ID '{'
		//        events+=Event*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'create' 'schedule' name=ID '{'
		//    events+=Event*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'create'
		public Keyword getCreateKeyword_0() { return cCreateKeyword_0; }
		
		//'schedule'
		public Keyword getScheduleKeyword_1() { return cScheduleKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//events+=Event*
		public Assignment getEventsAssignment_4() { return cEventsAssignment_4; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_4_0() { return cEventsEventParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cStartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStartTimeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStartTimeSTRINGTerminalRuleCall_3_0 = (RuleCall)cStartTimeAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEndTimeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEndTimeSTRINGTerminalRuleCall_5_0 = (RuleCall)cEndTimeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLocationKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cLocationAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cLocationAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDescriptionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cRecurKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRecurAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRecurRecurRuleEnumRuleCall_8_1_0 = (RuleCall)cRecurAssignment_8_1.eContents().get(0);
		private final Assignment cDaysOfWeekAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cDaysOfWeekDaysOfWeekParserRuleCall_8_2_0 = (RuleCall)cDaysOfWeekAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLinkKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cLinkAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cLinkSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cLinkAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cOrganizerKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cOrganizerAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cOrganizerPersonParserRuleCall_10_1_0 = (RuleCall)cOrganizerAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cInviteesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cInviteesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cInviteesPersonParserRuleCall_11_2_0 = (RuleCall)cInviteesAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cReminderKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cReminderAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cReminderReminderParserRuleCall_12_1_0 = (RuleCall)cReminderAssignment_12_1.eContents().get(0);
		
		//Event:
		//    'event' name=ID
		//    'start' startTime=STRING
		//    'end' endTime=STRING
		//    ('location' location=STRING)?
		//    ('description' description=STRING)?
		//    ('recur' recur=RecurRule (daysOfWeek=DaysOfWeek)?)?
		//    ('link' link=STRING)?
		//    ('organizer' organizer=Person)?
		//    ('invitees' '{' invitees+=Person+ '}')?
		//    ('reminder' reminder=Reminder)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'event' name=ID
		//'start' startTime=STRING
		//'end' endTime=STRING
		//('location' location=STRING)?
		//('description' description=STRING)?
		//('recur' recur=RecurRule (daysOfWeek=DaysOfWeek)?)?
		//('link' link=STRING)?
		//('organizer' organizer=Person)?
		//('invitees' '{' invitees+=Person+ '}')?
		//('reminder' reminder=Reminder)?
		public Group getGroup() { return cGroup; }
		
		//'event'
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'start'
		public Keyword getStartKeyword_2() { return cStartKeyword_2; }
		
		//startTime=STRING
		public Assignment getStartTimeAssignment_3() { return cStartTimeAssignment_3; }
		
		//STRING
		public RuleCall getStartTimeSTRINGTerminalRuleCall_3_0() { return cStartTimeSTRINGTerminalRuleCall_3_0; }
		
		//'end'
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
		
		//endTime=STRING
		public Assignment getEndTimeAssignment_5() { return cEndTimeAssignment_5; }
		
		//STRING
		public RuleCall getEndTimeSTRINGTerminalRuleCall_5_0() { return cEndTimeSTRINGTerminalRuleCall_5_0; }
		
		//('location' location=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'location'
		public Keyword getLocationKeyword_6_0() { return cLocationKeyword_6_0; }
		
		//location=STRING
		public Assignment getLocationAssignment_6_1() { return cLocationAssignment_6_1; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_6_1_0() { return cLocationSTRINGTerminalRuleCall_6_1_0; }
		
		//('description' description=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'description'
		public Keyword getDescriptionKeyword_7_0() { return cDescriptionKeyword_7_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_1_0() { return cDescriptionSTRINGTerminalRuleCall_7_1_0; }
		
		//('recur' recur=RecurRule (daysOfWeek=DaysOfWeek)?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'recur'
		public Keyword getRecurKeyword_8_0() { return cRecurKeyword_8_0; }
		
		//recur=RecurRule
		public Assignment getRecurAssignment_8_1() { return cRecurAssignment_8_1; }
		
		//RecurRule
		public RuleCall getRecurRecurRuleEnumRuleCall_8_1_0() { return cRecurRecurRuleEnumRuleCall_8_1_0; }
		
		//(daysOfWeek=DaysOfWeek)?
		public Assignment getDaysOfWeekAssignment_8_2() { return cDaysOfWeekAssignment_8_2; }
		
		//DaysOfWeek
		public RuleCall getDaysOfWeekDaysOfWeekParserRuleCall_8_2_0() { return cDaysOfWeekDaysOfWeekParserRuleCall_8_2_0; }
		
		//('link' link=STRING)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'link'
		public Keyword getLinkKeyword_9_0() { return cLinkKeyword_9_0; }
		
		//link=STRING
		public Assignment getLinkAssignment_9_1() { return cLinkAssignment_9_1; }
		
		//STRING
		public RuleCall getLinkSTRINGTerminalRuleCall_9_1_0() { return cLinkSTRINGTerminalRuleCall_9_1_0; }
		
		//('organizer' organizer=Person)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'organizer'
		public Keyword getOrganizerKeyword_10_0() { return cOrganizerKeyword_10_0; }
		
		//organizer=Person
		public Assignment getOrganizerAssignment_10_1() { return cOrganizerAssignment_10_1; }
		
		//Person
		public RuleCall getOrganizerPersonParserRuleCall_10_1_0() { return cOrganizerPersonParserRuleCall_10_1_0; }
		
		//('invitees' '{' invitees+=Person+ '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'invitees'
		public Keyword getInviteesKeyword_11_0() { return cInviteesKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//invitees+=Person+
		public Assignment getInviteesAssignment_11_2() { return cInviteesAssignment_11_2; }
		
		//Person
		public RuleCall getInviteesPersonParserRuleCall_11_2_0() { return cInviteesPersonParserRuleCall_11_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }
		
		//('reminder' reminder=Reminder)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'reminder'
		public Keyword getReminderKeyword_12_0() { return cReminderKeyword_12_0; }
		
		//reminder=Reminder
		public Assignment getReminderAssignment_12_1() { return cReminderAssignment_12_1; }
		
		//Reminder
		public RuleCall getReminderReminderParserRuleCall_12_1_0() { return cReminderReminderParserRuleCall_12_1_0; }
	}
	public class ReminderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Reminder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTimeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTimeINTTerminalRuleCall_1_0 = (RuleCall)cTimeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTitleAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cTitleAssignment_2_1.eContents().get(0);
		
		//Reminder:
		//    'time' time=INT
		//    ('title' title=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'time' time=INT
		//('title' title=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'time'
		public Keyword getTimeKeyword_0() { return cTimeKeyword_0; }
		
		//time=INT
		public Assignment getTimeAssignment_1() { return cTimeAssignment_1; }
		
		//INT
		public RuleCall getTimeINTTerminalRuleCall_1_0() { return cTimeINTTerminalRuleCall_1_0; }
		
		//('title' title=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'title'
		public Keyword getTitleKeyword_2_0() { return cTitleKeyword_2_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_2_1() { return cTitleAssignment_2_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_1_0() { return cTitleSTRINGTerminalRuleCall_2_1_0; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Person");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEmailKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEmailAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEmailSTRINGTerminalRuleCall_3_0 = (RuleCall)cEmailAssignment_3.eContents().get(0);
		
		//Person:
		//    'name' name=STRING
		//    'email' email=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' name=STRING
		//'email' email=STRING
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'email'
		public Keyword getEmailKeyword_2() { return cEmailKeyword_2; }
		
		//email=STRING
		public Assignment getEmailAssignment_3() { return cEmailAssignment_3; }
		
		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_3_0() { return cEmailSTRINGTerminalRuleCall_3_0; }
	}
	public class DaysOfWeekElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.DaysOfWeek");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDaysAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDaysWEEKDAYEnumRuleCall_0_0 = (RuleCall)cDaysAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDaysAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDaysWEEKDAYEnumRuleCall_1_1_0 = (RuleCall)cDaysAssignment_1_1.eContents().get(0);
		
		//DaysOfWeek: days+=WEEKDAY (',' days+=WEEKDAY)*;
		@Override public ParserRule getRule() { return rule; }
		
		//days+=WEEKDAY (',' days+=WEEKDAY)*
		public Group getGroup() { return cGroup; }
		
		//days+=WEEKDAY
		public Assignment getDaysAssignment_0() { return cDaysAssignment_0; }
		
		//WEEKDAY
		public RuleCall getDaysWEEKDAYEnumRuleCall_0_0() { return cDaysWEEKDAYEnumRuleCall_0_0; }
		
		//(',' days+=WEEKDAY)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//days+=WEEKDAY
		public Assignment getDaysAssignment_1_1() { return cDaysAssignment_1_1; }
		
		//WEEKDAY
		public RuleCall getDaysWEEKDAYEnumRuleCall_1_1_0() { return cDaysWEEKDAYEnumRuleCall_1_1_0; }
	}
	public class ScheduleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.Schedule");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Schedule:
		//    name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class SplitCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.SplitCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cScheduleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cScheduleScheduleCrossReference_1_0 = (CrossReference)cScheduleAssignment_1.eContents().get(0);
		private final RuleCall cScheduleScheduleIDTerminalRuleCall_1_0_1 = (RuleCall)cScheduleScheduleCrossReference_1_0.eContents().get(1);
		private final Keyword cByKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCriteriaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCriteriaSTRINGTerminalRuleCall_3_0 = (RuleCall)cCriteriaAssignment_3.eContents().get(0);
		
		//SplitCommand:
		//    'split' schedule=[Schedule] 'by' criteria=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' schedule=[Schedule] 'by' criteria=STRING
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//schedule=[Schedule]
		public Assignment getScheduleAssignment_1() { return cScheduleAssignment_1; }
		
		//[Schedule]
		public CrossReference getScheduleScheduleCrossReference_1_0() { return cScheduleScheduleCrossReference_1_0; }
		
		//ID
		public RuleCall getScheduleScheduleIDTerminalRuleCall_1_0_1() { return cScheduleScheduleIDTerminalRuleCall_1_0_1; }
		
		//'by'
		public Keyword getByKeyword_2() { return cByKeyword_2; }
		
		//criteria=STRING
		public Assignment getCriteriaAssignment_3() { return cCriteriaAssignment_3; }
		
		//STRING
		public RuleCall getCriteriaSTRINGTerminalRuleCall_3_0() { return cCriteriaSTRINGTerminalRuleCall_3_0; }
	}
	public class MergeCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.MergeCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMergeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSchedulesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSchedulesScheduleCrossReference_1_0 = (CrossReference)cSchedulesAssignment_1.eContents().get(0);
		private final RuleCall cSchedulesScheduleIDTerminalRuleCall_1_0_1 = (RuleCall)cSchedulesScheduleCrossReference_1_0.eContents().get(1);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTargetIDTerminalRuleCall_3_0 = (RuleCall)cTargetAssignment_3.eContents().get(0);
		
		//MergeCommand:
		//    'merge' schedules+=[Schedule]+ 'into' target=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'merge' schedules+=[Schedule]+ 'into' target=ID
		public Group getGroup() { return cGroup; }
		
		//'merge'
		public Keyword getMergeKeyword_0() { return cMergeKeyword_0; }
		
		//schedules+=[Schedule]+
		public Assignment getSchedulesAssignment_1() { return cSchedulesAssignment_1; }
		
		//[Schedule]
		public CrossReference getSchedulesScheduleCrossReference_1_0() { return cSchedulesScheduleCrossReference_1_0; }
		
		//ID
		public RuleCall getSchedulesScheduleIDTerminalRuleCall_1_0_1() { return cSchedulesScheduleIDTerminalRuleCall_1_0_1; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//target=ID
		public Assignment getTargetAssignment_3() { return cTargetAssignment_3; }
		
		//ID
		public RuleCall getTargetIDTerminalRuleCall_3_0() { return cTargetIDTerminalRuleCall_3_0; }
	}
	public class ModifyCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.ModifyCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModifyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cScheduleKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cScheduleAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cScheduleScheduleCrossReference_1_0_1_0 = (CrossReference)cScheduleAssignment_1_0_1.eContents().get(0);
		private final RuleCall cScheduleScheduleIDTerminalRuleCall_1_0_1_0_1 = (RuleCall)cScheduleScheduleCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cEventKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cEventAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cEventEventCrossReference_1_1_1_0 = (CrossReference)cEventAssignment_1_1_1.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_1_1_1_0_1 = (RuleCall)cEventEventCrossReference_1_1_1_0.eContents().get(1);
		private final Keyword cSetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cTimeAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final Keyword cTimeTimeKeyword_3_0_0_0 = (Keyword)cTimeAssignment_3_0_0.eContents().get(0);
		private final Assignment cValueAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0_1_0 = (RuleCall)cValueAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cOwnerKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cValueAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_1_1_0 = (RuleCall)cValueAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Keyword cLocationKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cValueAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_2_1_0 = (RuleCall)cValueAssignment_3_2_1.eContents().get(0);
		
		//ModifyCommand:
		//    'modify' ('schedule' schedule=[Schedule] | 'event' event=[Event]) 'set' (time='time' value=STRING | 'owner' value=STRING | 'location' value=STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//'modify' ('schedule' schedule=[Schedule] | 'event' event=[Event]) 'set' (time='time' value=STRING | 'owner' value=STRING | 'location' value=STRING)
		public Group getGroup() { return cGroup; }
		
		//'modify'
		public Keyword getModifyKeyword_0() { return cModifyKeyword_0; }
		
		//('schedule' schedule=[Schedule] | 'event' event=[Event])
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'schedule' schedule=[Schedule]
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'schedule'
		public Keyword getScheduleKeyword_1_0_0() { return cScheduleKeyword_1_0_0; }
		
		//schedule=[Schedule]
		public Assignment getScheduleAssignment_1_0_1() { return cScheduleAssignment_1_0_1; }
		
		//[Schedule]
		public CrossReference getScheduleScheduleCrossReference_1_0_1_0() { return cScheduleScheduleCrossReference_1_0_1_0; }
		
		//ID
		public RuleCall getScheduleScheduleIDTerminalRuleCall_1_0_1_0_1() { return cScheduleScheduleIDTerminalRuleCall_1_0_1_0_1; }
		
		//'event' event=[Event]
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'event'
		public Keyword getEventKeyword_1_1_0() { return cEventKeyword_1_1_0; }
		
		//event=[Event]
		public Assignment getEventAssignment_1_1_1() { return cEventAssignment_1_1_1; }
		
		//[Event]
		public CrossReference getEventEventCrossReference_1_1_1_0() { return cEventEventCrossReference_1_1_1_0; }
		
		//ID
		public RuleCall getEventEventIDTerminalRuleCall_1_1_1_0_1() { return cEventEventIDTerminalRuleCall_1_1_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_2() { return cSetKeyword_2; }
		
		//(time='time' value=STRING | 'owner' value=STRING | 'location' value=STRING)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//time='time' value=STRING
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//time='time'
		public Assignment getTimeAssignment_3_0_0() { return cTimeAssignment_3_0_0; }
		
		//'time'
		public Keyword getTimeTimeKeyword_3_0_0_0() { return cTimeTimeKeyword_3_0_0_0; }
		
		//value=STRING
		public Assignment getValueAssignment_3_0_1() { return cValueAssignment_3_0_1; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0_1_0() { return cValueSTRINGTerminalRuleCall_3_0_1_0; }
		
		//'owner' value=STRING
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'owner'
		public Keyword getOwnerKeyword_3_1_0() { return cOwnerKeyword_3_1_0; }
		
		//value=STRING
		public Assignment getValueAssignment_3_1_1() { return cValueAssignment_3_1_1; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_1_1_0() { return cValueSTRINGTerminalRuleCall_3_1_1_0; }
		
		//'location' value=STRING
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'location'
		public Keyword getLocationKeyword_3_2_0() { return cLocationKeyword_3_2_0; }
		
		//value=STRING
		public Assignment getValueAssignment_3_2_1() { return cValueAssignment_3_2_1; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_2_1_0() { return cValueSTRINGTerminalRuleCall_3_2_1_0; }
	}
	
	public class RecurRuleElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.RecurRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDAILYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDAILYDailyKeyword_0_0 = (Keyword)cDAILYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWEEKLYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWEEKLYWeeklyKeyword_1_0 = (Keyword)cWEEKLYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMONTHLYEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMONTHLYMonthlyKeyword_2_0 = (Keyword)cMONTHLYEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cYEARLYEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cYEARLYYearlyKeyword_3_0 = (Keyword)cYEARLYEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBYDAYEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBYDAYWeeklyOnKeyword_4_0 = (Keyword)cBYDAYEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum RecurRule:
		//    DAILY = 'daily' |
		//    WEEKLY = 'weekly' |
		//    MONTHLY = 'monthly' |
		//    YEARLY = 'yearly'|
		//    BYDAY = 'weekly on';
		public EnumRule getRule() { return rule; }
		
		//DAILY = 'daily' |
		//WEEKLY = 'weekly' |
		//MONTHLY = 'monthly' |
		//YEARLY = 'yearly'|
		//BYDAY = 'weekly on'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DAILY = 'daily'
		public EnumLiteralDeclaration getDAILYEnumLiteralDeclaration_0() { return cDAILYEnumLiteralDeclaration_0; }
		
		//'daily'
		public Keyword getDAILYDailyKeyword_0_0() { return cDAILYDailyKeyword_0_0; }
		
		//WEEKLY = 'weekly'
		public EnumLiteralDeclaration getWEEKLYEnumLiteralDeclaration_1() { return cWEEKLYEnumLiteralDeclaration_1; }
		
		//'weekly'
		public Keyword getWEEKLYWeeklyKeyword_1_0() { return cWEEKLYWeeklyKeyword_1_0; }
		
		//MONTHLY = 'monthly'
		public EnumLiteralDeclaration getMONTHLYEnumLiteralDeclaration_2() { return cMONTHLYEnumLiteralDeclaration_2; }
		
		//'monthly'
		public Keyword getMONTHLYMonthlyKeyword_2_0() { return cMONTHLYMonthlyKeyword_2_0; }
		
		//YEARLY = 'yearly'
		public EnumLiteralDeclaration getYEARLYEnumLiteralDeclaration_3() { return cYEARLYEnumLiteralDeclaration_3; }
		
		//'yearly'
		public Keyword getYEARLYYearlyKeyword_3_0() { return cYEARLYYearlyKeyword_3_0; }
		
		//BYDAY = 'weekly on'
		public EnumLiteralDeclaration getBYDAYEnumLiteralDeclaration_4() { return cBYDAYEnumLiteralDeclaration_4; }
		
		//'weekly on'
		public Keyword getBYDAYWeeklyOnKeyword_4_0() { return cBYDAYWeeklyOnKeyword_4_0; }
	}
	public class WEEKDAYElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ics.helper.HelperDSL.WEEKDAY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMOMondayKeyword_0_0 = (Keyword)cMOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTUEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTUTuesdayKeyword_1_0 = (Keyword)cTUEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWEWednesdayKeyword_2_0 = (Keyword)cWEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTHEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTHThursdayKeyword_3_0 = (Keyword)cTHEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFRFridayKeyword_4_0 = (Keyword)cFREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSAEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSASaturdayKeyword_5_0 = (Keyword)cSAEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSUEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSUSundayKeyword_6_0 = (Keyword)cSUEnumLiteralDeclaration_6.eContents().get(0);
		
		// // Example: "on Monday,Wednesday,Friday"
		//enum WEEKDAY:
		//    MO = 'Monday' |
		//    TU = 'Tuesday' |
		//    WE = 'Wednesday' |
		//    TH = 'Thursday' |
		//    FR = 'Friday' |
		//    SA = 'Saturday' |
		//    SU = 'Sunday'
		//;
		public EnumRule getRule() { return rule; }
		
		//MO = 'Monday' |
		//TU = 'Tuesday' |
		//WE = 'Wednesday' |
		//TH = 'Thursday' |
		//FR = 'Friday' |
		//SA = 'Saturday' |
		//SU = 'Sunday'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MO = 'Monday'
		public EnumLiteralDeclaration getMOEnumLiteralDeclaration_0() { return cMOEnumLiteralDeclaration_0; }
		
		//'Monday'
		public Keyword getMOMondayKeyword_0_0() { return cMOMondayKeyword_0_0; }
		
		//TU = 'Tuesday'
		public EnumLiteralDeclaration getTUEnumLiteralDeclaration_1() { return cTUEnumLiteralDeclaration_1; }
		
		//'Tuesday'
		public Keyword getTUTuesdayKeyword_1_0() { return cTUTuesdayKeyword_1_0; }
		
		//WE = 'Wednesday'
		public EnumLiteralDeclaration getWEEnumLiteralDeclaration_2() { return cWEEnumLiteralDeclaration_2; }
		
		//'Wednesday'
		public Keyword getWEWednesdayKeyword_2_0() { return cWEWednesdayKeyword_2_0; }
		
		//TH = 'Thursday'
		public EnumLiteralDeclaration getTHEnumLiteralDeclaration_3() { return cTHEnumLiteralDeclaration_3; }
		
		//'Thursday'
		public Keyword getTHThursdayKeyword_3_0() { return cTHThursdayKeyword_3_0; }
		
		//FR = 'Friday'
		public EnumLiteralDeclaration getFREnumLiteralDeclaration_4() { return cFREnumLiteralDeclaration_4; }
		
		//'Friday'
		public Keyword getFRFridayKeyword_4_0() { return cFRFridayKeyword_4_0; }
		
		//SA = 'Saturday'
		public EnumLiteralDeclaration getSAEnumLiteralDeclaration_5() { return cSAEnumLiteralDeclaration_5; }
		
		//'Saturday'
		public Keyword getSASaturdayKeyword_5_0() { return cSASaturdayKeyword_5_0; }
		
		//SU = 'Sunday'
		public EnumLiteralDeclaration getSUEnumLiteralDeclaration_6() { return cSUEnumLiteralDeclaration_6; }
		
		//'Sunday'
		public Keyword getSUSundayKeyword_6_0() { return cSUSundayKeyword_6_0; }
	}
	
	private final ModelElements pModel;
	private final CommandElements pCommand;
	private final CreateCommandElements pCreateCommand;
	private final EventElements pEvent;
	private final ReminderElements pReminder;
	private final PersonElements pPerson;
	private final RecurRuleElements eRecurRule;
	private final DaysOfWeekElements pDaysOfWeek;
	private final WEEKDAYElements eWEEKDAY;
	private final ScheduleElements pSchedule;
	private final SplitCommandElements pSplitCommand;
	private final MergeCommandElements pMergeCommand;
	private final ModifyCommandElements pModifyCommand;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HelperDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pCommand = new CommandElements();
		this.pCreateCommand = new CreateCommandElements();
		this.pEvent = new EventElements();
		this.pReminder = new ReminderElements();
		this.pPerson = new PersonElements();
		this.eRecurRule = new RecurRuleElements();
		this.pDaysOfWeek = new DaysOfWeekElements();
		this.eWEEKDAY = new WEEKDAYElements();
		this.pSchedule = new ScheduleElements();
		this.pSplitCommand = new SplitCommandElements();
		this.pMergeCommand = new MergeCommandElements();
		this.pModifyCommand = new ModifyCommandElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ics.helper.HelperDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    commands+=Command*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Command:
	//    CreateCommand | SplitCommand | MergeCommand | ModifyCommand;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//CreateCommand:
	//    'create' 'schedule' name=ID '{'
	//        events+=Event*
	//    '}';
	public CreateCommandElements getCreateCommandAccess() {
		return pCreateCommand;
	}
	
	public ParserRule getCreateCommandRule() {
		return getCreateCommandAccess().getRule();
	}
	
	//Event:
	//    'event' name=ID
	//    'start' startTime=STRING
	//    'end' endTime=STRING
	//    ('location' location=STRING)?
	//    ('description' description=STRING)?
	//    ('recur' recur=RecurRule (daysOfWeek=DaysOfWeek)?)?
	//    ('link' link=STRING)?
	//    ('organizer' organizer=Person)?
	//    ('invitees' '{' invitees+=Person+ '}')?
	//    ('reminder' reminder=Reminder)?;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//Reminder:
	//    'time' time=INT
	//    ('title' title=STRING)?
	//;
	public ReminderElements getReminderAccess() {
		return pReminder;
	}
	
	public ParserRule getReminderRule() {
		return getReminderAccess().getRule();
	}
	
	//Person:
	//    'name' name=STRING
	//    'email' email=STRING
	//;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//enum RecurRule:
	//    DAILY = 'daily' |
	//    WEEKLY = 'weekly' |
	//    MONTHLY = 'monthly' |
	//    YEARLY = 'yearly'|
	//    BYDAY = 'weekly on';
	public RecurRuleElements getRecurRuleAccess() {
		return eRecurRule;
	}
	
	public EnumRule getRecurRuleRule() {
		return getRecurRuleAccess().getRule();
	}
	
	//DaysOfWeek: days+=WEEKDAY (',' days+=WEEKDAY)*;
	public DaysOfWeekElements getDaysOfWeekAccess() {
		return pDaysOfWeek;
	}
	
	public ParserRule getDaysOfWeekRule() {
		return getDaysOfWeekAccess().getRule();
	}
	
	// // Example: "on Monday,Wednesday,Friday"
	//enum WEEKDAY:
	//    MO = 'Monday' |
	//    TU = 'Tuesday' |
	//    WE = 'Wednesday' |
	//    TH = 'Thursday' |
	//    FR = 'Friday' |
	//    SA = 'Saturday' |
	//    SU = 'Sunday'
	//;
	public WEEKDAYElements getWEEKDAYAccess() {
		return eWEEKDAY;
	}
	
	public EnumRule getWEEKDAYRule() {
		return getWEEKDAYAccess().getRule();
	}
	
	//Schedule:
	//    name=ID;
	public ScheduleElements getScheduleAccess() {
		return pSchedule;
	}
	
	public ParserRule getScheduleRule() {
		return getScheduleAccess().getRule();
	}
	
	//SplitCommand:
	//    'split' schedule=[Schedule] 'by' criteria=STRING;
	public SplitCommandElements getSplitCommandAccess() {
		return pSplitCommand;
	}
	
	public ParserRule getSplitCommandRule() {
		return getSplitCommandAccess().getRule();
	}
	
	//MergeCommand:
	//    'merge' schedules+=[Schedule]+ 'into' target=ID;
	public MergeCommandElements getMergeCommandAccess() {
		return pMergeCommand;
	}
	
	public ParserRule getMergeCommandRule() {
		return getMergeCommandAccess().getRule();
	}
	
	//ModifyCommand:
	//    'modify' ('schedule' schedule=[Schedule] | 'event' event=[Event]) 'set' (time='time' value=STRING | 'owner' value=STRING | 'location' value=STRING);
	public ModifyCommandElements getModifyCommandAccess() {
		return pModifyCommand;
	}
	
	public ParserRule getModifyCommandRule() {
		return getModifyCommandAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
